const gulp = require('gulp');
const sass = require('gulp-sass')(require('sass'));
const imagemin = require('gulp-imagemin');
const uglify = require('gulp-uglify');

function scripts() {
    return gulp.src('./src/scripts/*js')
    .pipe(uglify())
    .pipe(gulp.dest('./dist/js'));
}

function styles() {
    return gulp.src('./src/styles/*scss') //recupera todos os arquivos scss dentro da pasta ./scr/styles
        .pipe(sass({ outputStyle: 'compressed' })) //compilção do sass com execução da compressão diretamento no argumento da função sass 
        .pipe(gulp.dest('./dist/css')); //define pasta de destino dos arquivos scss compilados em css
}

function images() {
    return gulp.src('./src/images/**/*') //recupera todos os arquivos em todas as pastas dentro da pasta images
        .pipe(imagemin()) //executa o compressor de imagens  
        .pipe(gulp.dest('./dist/images')); // define pasta de destino das pastas e arquivos de imagens
}

exports.default = gulp.parallel(styles, images, scripts);
exports.watch = function() {
    gulp.watch('./src/styles/*scss', gulp.parallel(styles))
    gulp.watch('./scr/scripts/*.js', gulp.parallel(scripts));
    //observa todos os arquivos scss em styles e executa tarefas
    //*watch task has to be a function (optionally generated by using gulp.parallel or gulp.series)
}